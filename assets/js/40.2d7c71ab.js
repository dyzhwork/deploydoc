(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{362:function(s,a,t){"use strict";t.r(a);var e=t(7),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-配置"}},[s._v("#")]),s._v(" Git 配置")]),s._v(" "),a("p",[s._v("Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。")]),s._v(" "),a("p",[s._v("这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。")]),s._v(" "),a("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://dyzhwork.github.io/images/Git/git3.jpeg",expression:"'https://dyzhwork.github.io/images/Git/git3.jpeg'"}],staticStyle:{display:"block",margin:"auto",width:"50%"}}),s._v(" "),a("h2",{attrs:{id:"一、配置用户信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、配置用户信息"}},[s._v("#")]),s._v(" 一、配置用户信息")]),s._v(" "),a("p",[s._v("对所有本地仓库的用户信息进行配置,配置个人的用户名称和电子邮件地址：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对你的commit操作设置关联的用户名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yourname"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对你的commit操作设置关联的邮箱地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"youremail@xxx.com"')]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用有帮助的彩色命令行输出(一般不配置)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" color.ui auto\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"二、配置-ssh-秘钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、配置-ssh-秘钥"}},[s._v("#")]),s._v(" 二、配置 ssh 秘钥")]),s._v(" "),a("h3",{attrs:{id:"_1-配置-ssh-秘钥背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置-ssh-秘钥背景"}},[s._v("#")]),s._v(" ① 配置 ssh 秘钥背景")]),s._v(" "),a("p",[s._v("在往 github 上 push 项目的时候，如果走 https 的方式，每次都需要输入账号密码，非常麻烦。而采用 ssh 的方式，就不再需要输入，只需要在 github 自己账号下配置一个 SSH KEY 即可！")]),s._v(" "),a("p",[s._v("绝大多数人会使用 httpsUrl 克隆来说会比较方便，复制 httpsUrl 然后到 git Bash 里面直接用 clone 命令克隆到本地就好了。而使用 SSHUrl 克隆却需要在克隆之前先配置和添加 SSH 秘钥。")]),s._v(" "),a("p",[s._v("如果要使用 SSHUrl 克隆的话，需要以下几个要求:")]),s._v(" "),a("ul",[a("li",[s._v("你对仓库有权限")]),s._v(" "),a("li",[s._v("配置和添加 SSH 秘钥")])]),s._v(" "),a("h3",{attrs:{id:"_2-https-和-ssh-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-https-和-ssh-的区别"}},[s._v("#")]),s._v(" ② https 和 SSH 的区别")]),s._v(" "),a("ul",[a("li",[s._v("前者可以随意克隆 github 上的项目，而不管是谁的；而后者则是你必须是你要克隆的项目的拥有者或管理员，且需要先添加 SSH KEY ，否则无法克隆。")]),s._v(" "),a("li",[s._v("httpsUrl 在 push 的时候是需要验证用户名和密码的；而 SSH 在 push 的时候，是不需要输入用户名的，如果配置 SSH KEY 的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。")])]),s._v(" "),a("h3",{attrs:{id:"_3-生成-ssh-keygen-完整命令如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-生成-ssh-keygen-完整命令如下"}},[s._v("#")]),s._v(" ③ 生成 ssh-keygen 完整命令如下")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("-t rsa 指定密钥类型为 RSA；")]),s._v(" "),a("li",[s._v("-b 4096 指定密钥长度为 4096 位，这是目前推荐的安全长度；")]),s._v(" "),a("li",[s._v('-C "your_email@test.com" 可选项，添加一个注释，方便标识该密钥的用途或所属人。将your_email@test.com替换成你自己的电子邮件地址。')])])]),s._v(" "),a("p",[s._v("执行完整命令后，会提示你输入密钥文件的名称和存储路径,一路回车确认后完成。默认情况下，私钥存储在"),a("code",[s._v("用户目录下")]),s._v(" .ssh/id_rsa 中，公钥存储在"),a("code",[s._v("用户目录下")]),s._v(" .ssh/id_rsa.pub 中。")]),s._v(" "),a("h3",{attrs:{id:"_4-将id-rsa-pub文件内容复制添加到-github-或者-gitee-公钥管理处保存即可"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-将id-rsa-pub文件内容复制添加到-github-或者-gitee-公钥管理处保存即可"}},[s._v("#")]),s._v(" ④ 将"),a("code",[s._v("id_rsa.pub")]),s._v("文件内容复制添加到 github 或者 gitee 公钥管理处保存即可.")]),s._v(" "),a("h3",{attrs:{id:"_5-验证是否设置成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-验证是否设置成功"}},[s._v("#")]),s._v(" ⑤ 验证是否设置成功")]),s._v(" "),a("p",[s._v("现在验证一下用手中的私有密钥与 GitHub 进行认证和通信")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@github.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("出现下面信息即为成功")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Hi xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" You've successfully authenticated, but GitHub does not provide shell access.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);