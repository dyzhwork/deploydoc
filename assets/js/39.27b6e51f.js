(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{361:function(s,a,t){"use strict";t.r(a);var e=t(7),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、配置改变大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、配置改变大小写"}},[s._v("#")]),s._v(" 一、配置改变大小写")]),s._v(" "),a("p",[s._v("正常情况下,在开发过程中,你所写的代码文件名大小写通常会被默认忽略,也就是说,刚开始新建一个文件如:"),a("code",[s._v("TEST.vue")]),s._v(",但是后续改动成"),a("code",[s._v("Test.vue")]),s._v(",严格来说,这就是两个不同的文件,但是项目中默认 git 不会检测文件名发生变化。对于一开始就新建的文件名问题不大。但是提交了文件推送到远程再修改就有可能造成问题:导致本地代码与远程代码不一致。")]),s._v(" "),a("p",[s._v("所以提交代码时,先利用终端指令来检查下")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--get")]),s._v(" core.ignorecase\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果上述命令返回"),a("code",[s._v("true")]),s._v(",说明项目中 git 是忽略大小写的,因此你最好执行以下命令:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config core.ignorecase "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("再次执行以下命令:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--get")]),s._v(" core.ignorecase\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("返回 "),a("code",[s._v("false")]),s._v(",则设置成功,禁止忽略大小写,也就是说,修改项目文件名大小写将会提示修改文件。这样设置完成后，进行 git status 可发现当前文件名称差异显示出来了；若是提交后进行的设置，可进入本地代码，将文件名改为 test2（原文件名 TEST），待提交后，再修改为 test")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("温馨提示->需要注意的是:")]),s._v(" "),a("p",[s._v("当前配置设置仅针对当前项目.git，其他项目需重新配置")])])])}),[],!1,null,null,null);a.default=n.exports}}]);