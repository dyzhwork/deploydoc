(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{352:function(s,n,a){"use strict";a.r(n);var t=a(7),r=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"stylus-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stylus-语法"}},[s._v("#")]),s._v(" Stylus 语法")]),s._v(" "),n("p",[s._v("Stylus 的语法规则相对于原生 CSS 而言更加灵活和简洁，以下是一些 Stylus 的语法规则：")]),s._v(" "),n("ul",[n("li",[s._v("缩进：Stylus 使用缩进来表示层级关系，类似于 Python 语言。这样可以使得代码更加整洁与易读；")]),s._v(" "),n("li",[s._v("变量：使用$符号定义变量，例如 $color = #333；")]),s._v(" "),n("li",[s._v("Mixin：Mixin 是一种可重用的代码块，类似于函数。定义 Mixin 时使用“+”符号，例如 +border-radius(value) { border-radius: value }；")]),s._v(" "),n("li",[s._v("运算符：支持算术、比较、逻辑等运算符，并且可以自定义运算符；")]),s._v(" "),n("li",[s._v('条件语句：支持 if/else 条件语句，例如 if color == "red" { background-color: color } else { background-color: #fff }；')]),s._v(" "),n("li",[s._v("迭代器：支持 for 循环，例如 for i in 1..3 { margin-right: i * 10px }；")]),s._v(" "),n("li",[s._v("嵌套选择器：支持将子元素的样式嵌套在父元素中，例如 ul { li { list-style: none } }；")]),s._v(" "),n("li",[s._v("函数：支持自定义函数，例如 darken(color, amount) { return mix(#000, color, amount) }；")]),s._v(" "),n("li",[s._v("导入：使用@import 语句导入其他文件中的样式。")])]),s._v(" "),n("p",[s._v("所以，Stylus 的语法规则相对原生 CSS 更加强大、灵活和易于扩展，可以大大提高 CSS 编写的效率和质量。但是，需要注意的是，由于 Stylus 语法与原生 CSS 有所不同，因此在使用 Stylus 时需要仔细阅读官方文档并进行深入理解。")]),s._v(" "),n("h2",{attrs:{id:"代码示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[s._v("#")]),s._v(" 代码示例")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[s._v("// 定义颜色变量\n$primary-color = #007bff\n\n// 定义Mixin\n+"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" value\n\n// 定义函数\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("darken")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" amount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  return "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("#000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" amount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n// 使用条件语句和迭代器\nfor i in 1..5\n  if i % 2 == 0\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("darken")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$primary-color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i / 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  else\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lighten")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$primary-color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i / 10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n  +"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i * 5px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("在这个例子中，我们定义了一个颜色变量"),n("code",[s._v("$primary-color")]),s._v("，一个 Mixin "),n("code",[s._v("+border-radius")]),s._v("，和一个函数 "),n("code",[s._v("darken")]),s._v("。然后使用迭代器和条件语句来为一组元素设置不同的背景颜色和圆角半径。在每次循环时，将使用 Mixin 来为元素设置圆角，并使用自定义函数 darken 来动态计算背景颜色。")]),s._v(" "),n("p",[s._v("需要注意的是，上述代码块"),n("code",[s._v("缩进使用了空格（通常为两个或四个）")]),s._v("，而非制表符。这是"),n("code",[s._v("因为 Stylus 的缩进是敏感的")]),s._v("，如果使用制表符可能会导致解析错误。")]),s._v(" "),n("h2",{attrs:{id:"特别注意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特别注意"}},[s._v("#")]),s._v(" 特别注意")]),s._v(" "),n("p",[s._v("在 Stylus 中，+符号用于定义 Mixin。Mixin 可以理解为一种可重用的代码块，类似于函数。Mixin 定义了一组 CSS 属性和值，可以在需要的地方调用它们。")]),s._v(" "),n("p",[s._v("使用 Mixin 的好处是可以减少代码量并增加可重用性。可以将一些常用的样式抽离出来，以 Mixin 的形式存在，然后在需要用到这些样式的地方，直接调用 Mixin 即可。这样就避免了样式的重复编写和维护。")]),s._v(" "),n("p",[s._v("在 Stylus 中，定义 Mixin 时使用+符号，例如：")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[s._v("// 定义一个名为border-radius的Mixin\n+"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" value\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("上述代码定义了一个名为 border-radius 的 Mixin，它接受一个参数 value，用于设置元素的圆角半径。Mixin 中的 CSS 属性和值将被编译成标准的 CSS，并可以在需要的地方进行调用。")]),s._v(" "),n("p",[s._v("在调用 Mixin 时，使用+符号加上 Mixin 名称，例如：")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[s._v("// 调用border-radius的Mixin，设置圆角半径为10px\n+"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("上述代码将会编译成如下的 CSS：")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[s._v("border-radius")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])}),[],!1,null,null,null);n.default=r.exports}}]);