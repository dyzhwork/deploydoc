(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{429:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"什么是渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是渲染"}},[t._v("#")]),t._v(" 什么是渲染")]),t._v(" "),s("p",[t._v("把 html 变成屏幕上的像素信息")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一行:****************")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二行:****************")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pixels\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"浏览器中输入-url-然后回车-发生了什么事"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中输入-url-然后回车-发生了什么事"}},[t._v("#")]),t._v(" 浏览器中输入 url,然后回车,发生了什么事?")]),t._v(" "),s("p",[t._v("主要两件事:1. 网络 2.渲染")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("网络进程\n获取 html,生成渲染任务交给消息队列等待渲染线程进行渲染")])]),t._v(" "),s("li",[s("p",[t._v("渲染\n渲染流水线:1.得到 html 字符串->2.解析 html->3.样式计算->4.布局->5.分层->6.绘制->7.分块->8.光栅化->9.画->10.最终像素信息")])])]),t._v(" "),s("h2",{attrs:{id:"解析-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析-html"}},[t._v("#")]),t._v(" 解析 HTML")]),t._v(" "),s("p",[t._v("parseHTML,生成 dom,css-om 两棵树.解析 html,解析 css,方便以后的 js 操作")]),t._v(" "),s("h3",{attrs:{id:"浏览器如何渲染页面的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何渲染页面的"}},[t._v("#")]),t._v(" 浏览器如何渲染页面的?")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("浏览器如何渲染页面的")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("当浏览器的网络线程收到 HTML 文档后，会产生一个渣染任务，并将其传递给渣染主线程的消息队列。")])]),t._v(" "),s("li",[s("p",[t._v("在事件循环机制的作用下，染主线程取出消息队列中的染任务，开启渲染流程。")])]),t._v(" "),s("li",[s("p",[t._v("整个渣染流程分为多个阶段，分别是：HTML 解析、样式计算、布局、分层、绘制、分块、光栅化、画")])]),t._v(" "),s("li",[s("p",[t._v("每个阶段都有明确的输入输出，上一个阶段的输出会成为下一个阶段的输入。")])]),t._v(" "),s("li",[s("p",[t._v("这样，整个渣染流程就形成了一套组织严密的生产流水线。")])]),t._v(" "),s("li",[s("p",[t._v("渣染的第一步是解析 HTML。")])])]),t._v(" "),s("ul",[s("li",[t._v("解析过程中遇到 CSS 解析 CSS，遇到 JS 执行 JS。为了提高解析效率，浏览器在开始解析前，会启动一个预解析的线程，率先下载 HTML 中的外部 CSS 文件和外部的 JS 文件。")]),t._v(" "),s("li",[t._v("如果主线程解析到 Link 位置，此时外部的 CSS 文件还没有下载解析好，主线程不会等待，继续解析后续的这是因为下载和解析 CsS 的工作是在预解析线程中进行的。这就是 CSS 不会阻塞 HTML 解析的根本原因。")]),t._v(" "),s("li",[t._v("如果主线程解析到 script 位置，会停止解析 HTML，转而等待 JS 文件下载好，并将全局代码解析执行完成后，才能继续解析 HTML。这是因为 JS 代码的执行过程可能会修改当前的 DOM 树，所以 DOM 树的生成必")])])]),t._v(" "),s("h3",{attrs:{id:"什么是-reflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-reflow"}},[t._v("#")]),t._v(" 什么是 reflow?")]),t._v(" "),s("p",[t._v("修改 css,如宽度,创建 dom,将会影响布局,样式等变化")]),t._v(" "),s("ul",[s("li",[t._v("reflow 的本质就是重新计算 layout 树。")]),t._v(" "),s("li",[t._v("当进行了会影响布局树的操作后，需要重新计算布局树，会引发 layout。")]),t._v(" "),s("li",[t._v("为了避免连续的多次操作导致布局树反复计算，浏览器会合并这些操作，当 JS 代码全部完成后再进行统一计算。所以，改动属性造成的 reflow 是异步完成的。")]),t._v(" "),s("li",[t._v("也同样因为如此，当 JS 获取布局属性时，就可能造成无法获取到最新的布局信息")]),t._v(" "),s("li",[t._v("浏览器在反复权衡下，最终决定获取属性立即 reflow。")])]),t._v(" "),s("h3",{attrs:{id:"什么是-repaint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-repaint"}},[t._v("#")]),t._v(" 什么是 repaint?")]),t._v(" "),s("ul",[s("li",[t._v("repaint 的本质就是重新根据分层信息计算了绘制指令。")]),t._v(" "),s("li",[t._v("当改动了可见样式后，就需要重新计算，会引发 repaint。")]),t._v(" "),s("li",[t._v("由于元素的布局信息也属于可见样式，所以 reflow 一定会引起 repaint。")])]),t._v(" "),s("h3",{attrs:{id:"什么是-transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-transform"}},[t._v("#")]),t._v(" 什么是 transform?")])])}),[],!1,null,null,null);s.default=e.exports}}]);