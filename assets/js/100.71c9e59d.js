(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{422:function(i,t,e){"use strict";e.r(t);var v=e(7),a=Object(v.a)({},(function(){var i=this,t=i._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("h2",{attrs:{id:"一、什么是-pinia"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是-pinia"}},[i._v("#")]),i._v(" 一、什么是 Pinia")]),i._v(" "),t("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://dyzhwork.github.io/images/Pinia/pinia2.svg",expression:"'https://dyzhwork.github.io/images/Pinia/pinia2.svg'"}],staticStyle:{display:"block",margin:"auto",width:"20%"}}),i._v(" "),t("p",[t("strong",[i._v("Pinia 是 Vue 的存储库")]),i._v("，它允许您跨组件/页面共享状态。 如果您熟悉 Composition API，您可能会认为您已经可以通过一个简单的 export const state = reactive({}). 这对于单页应用程序来说是正确的，但如果它是服务器端呈现的，会使您的应用程序暴露于安全漏洞。 但即使在小型单页应用程序中，您也可以从使用 Pinia 中获得很多好处：")]),i._v(" "),t("ul",[t("li",[i._v("dev-tools 支持\n"),t("ul",[t("li",[i._v("跟踪动作、突变的时间线")]),i._v(" "),t("li",[i._v("Store 出现在使用它们的组件中")]),i._v(" "),t("li",[i._v("time travel 和 更容易的调试")])])]),i._v(" "),t("li",[i._v("热模块更换\n"),t("ul",[t("li",[i._v("在不重新加载页面的情况下修改您的 Store")]),i._v(" "),t("li",[i._v("在开发时保持任何现有状态")])])]),i._v(" "),t("li",[i._v("插件：使用插件扩展 Pinia 功能")]),i._v(" "),t("li",[i._v("为 JS 用户提供适当的 TypeScript 支持或 autocompletion")]),i._v(" "),t("li",[i._v("服务器端渲染支持")])]),i._v(" "),t("h2",{attrs:{id:"二、pinia-和-≤vuex4-x"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、pinia-和-≤vuex4-x"}},[i._v("#")]),i._v(" 二、Pinia 和 ≤Vuex4.x")]),i._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[i._v("注意")]),i._v(" "),t("p",[i._v("Vuex 3.x 是 Vuex 的 Vue 2 而 Vuex 4.x 是 Vue 3")])]),i._v(" "),t("p",[i._v("Pinia API 与 Vuex 有很大不同，比如：")]),i._v(" "),t("ul",[t("li",[i._v("mutations 不再存在。他们经常被认为是 非常 冗长。他们最初带来了 devtools 集成，但这不再是问题。")]),i._v(" "),t("li",[i._v("无需创建自定义复杂包装器来支持 TypeScript，所有内容都是类型化的，并且 API 的设计方式尽可能利用 TS 类型推断。")]),i._v(" "),t("li",[i._v("不再需要注入、导入函数、调用函数、享受自动完成功能！")]),i._v(" "),t("li",[i._v("无需动态添加 Store，默认情况下它们都是动态的，您甚至都不会注意到。请注意，您仍然可以随时手动使用 Store 进行注册，但因为它是自动的，您无需担心。")]),i._v(" "),t("li",[i._v("不再有 modules 的嵌套结构。您仍然可以通过在另一个 Store 中导入和 使用 来隐式嵌套 Store，但 Pinia 通过设计提供平面结构，同时仍然支持 Store 之间的交叉组合方式。 您甚至可以拥有 Store 的循环依赖关系。")]),i._v(" "),t("li",[i._v("没有 命名空间模块。鉴于 Store 的扁平架构，“命名空间” Store 是其定义方式所固有的，您可以说所有 Store 都是命名空间的。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);